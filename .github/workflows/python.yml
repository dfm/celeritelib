name: Python
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  style:
    name: "style"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install isort black black_nbconvert
      - name: Check the style
        run: |
          isort -c python
          black --check python
          black_nbconvert --check .

  build:
    name: "py${{ matrix.python-version }} / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install --use-feature=2020-resolver -e ".[test]"
        env:
          DISTUTILS_USE_SDK: 1
          MSSdk: 1
      - name: Run the unit tests
        run: python -m pytest --cov celerite2 python/test
      - uses: actions/upload-artifact@v2
        if: ${{ matrix.os != 'windows-latest' }}
        with:
          name: cov-${{ matrix.os }}-${{ matrix.python-version }}
          path: .coverage

  theano:
    name: "theano"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: goanpeca/setup-miniconda@v1
        with:
          python-version: 3.8
          auto-update-conda: true
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install -q numpy scipy theano mkl-service
          python -m pip install -U pip
          python -m pip install --use-feature=2020-resolver -e ".[test,theano]"
      - name: Get theano compiledir
        id: compiledir
        shell: bash -l {0}
        run: |
          python -c "import theano; print('::set-output name=compiledir::' + theano.config.compiledir.split('/')[-1])"
      - name: "Cache ~/.theano"
        uses: actions/cache@v2
        with:
          path: ~/.theano
          key: theano-${{ steps.compiledir.outputs.compiledir }}-${{ hashFiles('python/test/theano/*.py') }}
          restore-keys: |
            theano-${{ steps.compiledir.outputs.compiledir }}-
            theano-
      - name: Run the unit tests
        shell: bash -l {0}
        run: python -m pytest --cov celerite2 python/test/theano
      - uses: actions/upload-artifact@v2
        with:
          name: cov-theano
          path: .coverage

  pytorch:
    name: "pytorch"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: goanpeca/setup-miniconda@v1
        with:
          python-version: 3.8
          auto-update-conda: true
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install pytorch torchvision cpuonly -c pytorch
          python -m pip install -U pip
          python -m pip install --use-feature=2020-resolver -e ".[test,torch]"
      - name: Run the unit tests
        shell: bash -l {0}
        run: python -m pytest --cov celerite2 python/test/torch
      - uses: actions/upload-artifact@v2
        with:
          name: cov-pytorch
          path: .coverage

  jax:
    name: "jax"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python
        uses: goanpeca/setup-miniconda@v1
        with:
          python-version: 3.8
          auto-update-conda: true
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          python -m pip install -U pip
          python -m pip install --use-feature=2020-resolver -e ".[test,jax]"
      - name: Run the unit tests
        shell: bash -l {0}
        run: python -m pytest --cov celerite2 python/test/jax
      - uses: actions/upload-artifact@v2
        with:
          name: cov-jax
          path: .coverage

  coverage:
    name: coverage
    needs: [build, theano, pytorch, jax]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Download all artifacts
        uses: actions/download-artifact@v2
      - name: Merge and upload coverage
        run: |
          python -m pip install coveralls
          find . -name \.coverage -exec coverage combine --append {} \;
          coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
